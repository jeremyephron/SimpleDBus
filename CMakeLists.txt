cmake_minimum_required(VERSION 3.16.0)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

project(SIMPLEDBUS)

# Load dependencies
find_package(PkgConfig REQUIRED)
pkg_search_module(DBUS REQUIRED dbus-1)

# Detect if the project is being build within a project or standalone.
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
    set(STANDALONE true)

    # Configure the build path
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
else()
    set(STANDALONE false)
endif()

# Library includes
include_directories(${DBUS_INCLUDE_DIRS})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)

# OUTPUTS
message("-- [INFO] Building SimpleDBus")
file(GLOB_RECURSE SRC_SIMPLEDBUS_FILES "${CMAKE_CURRENT_SOURCE_DIR}/src/simpledbus/*.cpp")

add_library(simpledbus-static STATIC ${SRC_SIMPLEDBUS_FILES})
add_library(simpledbus SHARED ${SRC_SIMPLEDBUS_FILES})

target_compile_options(simpledbus-static PRIVATE -std=c++17 -fPIC -Wfatal-errors -Wpedantic -O3)
target_compile_options(simpledbus PRIVATE -std=c++17 -fPIC -Wfatal-errors -Wpedantic -O3)

target_link_libraries(simpledbus-static PUBLIC ${DBUS_LIBRARIES})
target_link_libraries(simpledbus PUBLIC ${DBUS_LIBRARIES})

message("-- [INFO] Building BluezDBus")
file(GLOB_RECURSE SRC_BLUEZDBUS_FILES "${CMAKE_CURRENT_SOURCE_DIR}/src/bluezdbus/*.cpp")

add_library(bluezdbus-static STATIC ${SRC_BLUEZDBUS_FILES})
add_library(bluezdbus SHARED ${SRC_BLUEZDBUS_FILES})

target_compile_options(bluezdbus-static PRIVATE -std=c++17 -fPIC -Wfatal-errors -Wpedantic -O3)
target_compile_options(bluezdbus PRIVATE -std=c++17 -fPIC -Wfatal-errors -Wpedantic -O3)

target_link_libraries(bluezdbus-static PUBLIC simpledbus-static)
target_link_libraries(bluezdbus PUBLIC simpledbus-static)

# Load constant overrides
if(OVERRIDE_ORG_BLUEZ_SERVICE_NAME)
  message("-- [INFO] Overriding ORG_BLUEZ_SERVICE_NAME with ${OVERRIDE_ORG_BLUEZ_SERVICE_NAME}")
  target_compile_definitions(bluezdbus-static PRIVATE -DORG_BLUEZ_SERVICE_NAME=${OVERRIDE_ORG_BLUEZ_SERVICE_NAME})
  target_compile_definitions(bluezdbus PRIVATE -DORG_BLUEZ_SERVICE_NAME=${OVERRIDE_ORG_BLUEZ_SERVICE_NAME})
endif()

if(OVERRIDE_ORG_BLUEZ_DBUS_BUS)
  message("-- [INFO] Overriding ORG_BLUEZ_DBUS_BUS with ${OVERRIDE_ORG_BLUEZ_DBUS_BUS}")
  target_compile_definitions(bluezdbus-static PRIVATE -DORG_BLUEZ_DBUS_BUS=${OVERRIDE_ORG_BLUEZ_DBUS_BUS})
  target_compile_definitions(bluezdbus PRIVATE -DORG_BLUEZ_DBUS_BUS=${OVERRIDE_ORG_BLUEZ_DBUS_BUS})
endif()

# Export the variables needed by the parent project
if(NOT ${STANDALONE})
    set(SIMPLEDBUS_INCLUDES ${CMAKE_CURRENT_SOURCE_DIR}/src ${DBUS_INCLUDE_DIRS} PARENT_SCOPE)
endif()

message("-- [INFO] Building Unit Test")

include(FetchContent)
FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/refs/tags/release-1.10.0.zip
)
FetchContent_GetProperties(googletest)
if(NOT googletest_POPULATED)
  FetchContent_Populate(googletest)
  add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR})
endif()
